package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.26

import (
	"context"
	"fmt"

	"github.com/drithh/multi-tier-architecture/graph/model"
)

// Student is the resolver for the student field.
func (r *queryResolver) Student(ctx context.Context, nim string) (*model.Student, error) {
	panic(fmt.Errorf("not implemented: Student - student"))
}

// Lecturer is the resolver for the lecturer field.
func (r *queryResolver) Lecturer(ctx context.Context, nip string) (*model.Lecturer, error) {
	panic(fmt.Errorf("not implemented: Lecturer - lecturer"))
}

// Course is the resolver for the course field.
func (r *queryResolver) Course(ctx context.Context, code string) (*model.Course, error) {
	panic(fmt.Errorf("not implemented: Course - course"))
}

// StudentCourse is the resolver for the studentCourse field.
func (r *queryResolver) StudentCourse(ctx context.Context, student string) ([]*model.StudentCourse, error) {
	panic(fmt.Errorf("not implemented: StudentCourse - studentCourse"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
